const NumWheels = 4;

// Global Variables
var irobot: integer;
    t, w: double;
    lines: TStrings;
    UDP: TStream;

procedure SetRobotVoltageRef(aVoltage: double);
begin
//  SetAxisVoltageRef(irobot, 0, aVoltage);
  SetAxisVoltageRef(irobot, 1, aVoltage);
  SetAxisVoltageRef(irobot, 2, aVoltage);
  SetAxisVoltageRef(irobot, 3, aVoltage);
end;


procedure Control;
var ref: double;
    s: string;
    v, v1, v2: double;
begin

  if keyPressed(ord('R')) then begin
    SetRobotPos(irobot, 0.5, -0.5, 0.3, 0);
  end;
  v := 10;

  v1 := 0;
  v2 := 0;
  if keyPressed(VK_RIGHT) then begin
    v1 := -1;
    v2 := -1;
  end;

  if keyPressed(VK_LEFT) then begin
    v1 := v1 + 1;
    v2 := v2 + 1;
  end;

  if keyPressed(VK_UP) then begin
    v1 := v1 - 1;
    v2 := v2 + 1;
  end;

  if keyPressed(VK_DOWN) then begin
    v1 := v1 + 1;
    v2 := v2 - 1;
  end;

  v1 := v1*v;
  v2 := v2*v;
  SetAxisSpeedRef(irobot, 0, v1);
  SetAxisSpeedRef(irobot, 1, v2);

  t := t + 0.04;
  if w*t >= 2*pi then begin
    t := t - 2*pi/w;
  end;
  
  //s := ReadUDPData;
  //if s <> '' then writeln(s);
  //writeln(ReadUDPData);
 //SetRobotVoltageRef(1);
 //s:=  ReadComPort;
 //writeComPort(' dcd');
 //SetRobotVoltageRef(5*(2 - GetRobotX(irobot) ));
 //SetRobotVoltageRef(1*sin(w*t));
 //SetRobotVoltageRef(1*sign(sin(w*t)));
 // writeln(floattostr(elapsed_time)+' '+floattostr(estado_m.pos)+' '+floattostr(estado_m.vel));
  
end;


procedure Initialize;
begin
  irobot := 0;
  t := 0;
  w := 1;
  //StartSolidFire(0,1);
  //startFire;
  //WriteUDPData('127.0.0.1', 9808, 'ola');
  //lines := TStrings.create;
  //SetThingColor(1,0,0,0,255);
  //SetSolidColor(0,0,0,0,255);
end;
